<?php
/**
 * @file
 * Install, update, and uninstall functions for the jsonb module.
 */

/**
 * Implements hook_field_schema().
 *
 * @see http://drupal.org/node/146939
 * @see schemaapi
 * @see hook_field_schema()
 *
 * @ingroup jsonb
 */
function jsonb_field_schema($field) {
  assert(in_array($field['type'], ['json', 'jsonb']), new RuntimeException('Someone tried to get schema info a JSON/JSONB field with an invalid type. Something is very wrong.'));

  return [
    'columns' => [
      'value' => [
        'type' => 'text',
        'mysql_type' => 'json',
        // Will be json or jsonb depending on the field type.
        'pgsql_type' => $field['type'],
        'not null' => FALSE,
      ],
    ],
  ];
}

/**
 * Implements hook_requirements().
 */
function jsonb_requirements($phase) {
  $requirements = [];

  if ($phase == 'install' || $phase == 'runtime') {
    $type = Database::getConnection()->databaseType();
    $version_text = Database::getConnection()->version();
    $version = explode('.', $version_text);

    if ($type == 'mysql') {
      // Check that we're either using MariaDB 10.x, or MySQL 5.5.7 or above.
      if (!preg_match('/1\d\.\d+\.\d+-MariaDB/', $version_text) && ($version[0] < 5 || ($version[0] == 5 && $version[1] < 5) || ($version[0] == 5 && $version[1] == 5 && $version[2] < 7))) {
        $requirements['jsonb'] = [
          'title' => t('JSON/JSONB Field'),
          'value' => t('MySQL version not supported'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('To support the JSON format, you need to use MySQL version 5.5.7 or higher. You are running @version.', [
            '@version' => Database::getConnection()->version(),
          ]),
        ];
      }
    }
    // Ensure we are running on a PostgreSQL database and we have the right version installed.
    elseif ($type == 'pgsql') {
      if ($version[0] < 9 || ($version[0] == 9 && $version[1] < 2)) {
        $requirements['jsonb'] = array(
          'title' => t('JSON/JSONB Field'),
          'value' => t('PostgreSQL version not supported'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('To support the JSON format, you need to be on at least version 9.2 of PostgreSQL, and 9.4 for JSONB. You are running @version.', array('@version' => Database::getConnection()->version())),
        );
      }

      if ($version[0] == 9 && $version[1] < 4) {
        $requirements['jsonb'] = array(
          'title' => t('JSON/JSONB Field'),
          'value' => t('PostgreSQL version partially supported'),
          'severity' => REQUIREMENT_WARNING,
          'description' => t('To support the JSONB format, you need to be on at least version 9.4 of PostgreSQL. You are running @version.', array('@version' => Database::getConnection()->version())),
        );
      }
    }
    else {
      $requirements['jsonb'] = array(
        'title' => t('JSON/JSONB Field'),
        'value' => t('Not supported'),
        'severity' => REQUIREMENT_ERROR,
        'description' => t('Unsupported database. You are running @type.', array('@type' => $type)),
      );
    }

    // If we did not get any errors from the checks above, we should be
    // good to go.
    if (empty($requirements)) {
      $requirements['jsonb'] = [
        'title' => t('JSON/JSONB Field'),
        'value' => t('Supported database'),
        'severity' => REQUIREMENT_OK,
        'description' => t('You are running @type @version.', [
          '@type' => $type,
          '@version' => Database::getConnection()->version(),
        ]),
      ];
    }
  }

  return $requirements;
}
